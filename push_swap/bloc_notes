t_pslist	*apply_instruct(char **in, t_pslist *h_a, t_psflag *f)
{
	int			i;
	int			pa_pb;
	t_pslist	*h_b;

	i = 0;
	pa_pb = 0;
	h_b = NULL;
	while (in[i])
	{
		if (!h_b && (cmp(in[i], "rrr\n") || cmp(in[i], "rr\n")
		|| cmp(in[i], "ss\n")))
			break ;
		cmp(in[i], "sa\n") || cmp(in[i], "ss\n") ? swap(h_a, h_a->next, f) : 0;
		cmp(in[i], "sb\n") || cmp(in[i], "ss\n") ? swap(h_b, h_b->next, f) : 0;
		pa_pb += (!(ft_strcmp(in[i], "pa\n"))) ? push(&h_b, &h_a, f) : 0;
		pa_pb -= (!(ft_strcmp(in[i], "pb\n"))) ? push(&h_a, &h_b, f) : 0;
		cmp(in[i], "ra\n") || cmp(in[i], "rr\n") ? rot(&h_a, 1, f) : 0;
		cmp(in[i], "rb\n") || cmp(in[i], "rr\n") ? rot(&h_b, 1, f) : 0;
		cmp(in[i], "rra\n") || cmp(in[i], "rrr\n") ? rrot(&h_a, 1, f) : 0;
		cmp(in[i], "rrb\n") || cmp(in[i], "rrr\n") ? rrot(&h_b, 1, f) : 0;
		i++;
	}
	pa_pb < 0 || cmp(in[i], "rrr\n") || cmp(in[i], "rr\n") || cmp(in[i], "ss\n")
	? ps_output(2) : 0;
	return ((pa_pb < 0 || (in[i] && (in[i][0] == 'r' || in[i][0] == 's'))) ? NULL : h_a);